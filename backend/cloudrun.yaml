# Cloud Run service configuration for SIRA Backend
# Deploy with: gcloud run services replace cloudrun.yaml

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: sira-backend
  labels:
    cloud.googleapis.com/location: us-central1
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
    run.googleapis.com/launch-stage: BETA
spec:
  template:
    metadata:
      labels:
        run.googleapis.com/startupProbeType: Default
      annotations:
        # Scaling
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "10"
        
        # CPU and Memory
        run.googleapis.com/cpu-throttling: "true"
        run.googleapis.com/memory: "2Gi"
        run.googleapis.com/cpu: "2"
        
        # Execution environment
        run.googleapis.com/execution-environment: gen2
        
        # Timeout
        run.googleapis.com/timeout: "300s"
        
        # VPC Connector (if needed)
        # run.googleapis.com/vpc-access-connector: projects/PROJECT_ID/locations/REGION/connectors/CONNECTOR_NAME
        # run.googleapis.com/vpc-access-egress: all-traffic
        
        # Cloud SQL (if needed)
        # run.googleapis.com/cloudsql-instances: PROJECT_ID:REGION:INSTANCE_NAME
        
        # Binary Authorization (for production)
        # run.googleapis.com/binary-authorization-breakglass: "true"
        
    spec:
      containerConcurrency: 100
      timeoutSeconds: 300
      serviceAccountName: sira-backend-sa@PROJECT_ID.iam.gserviceaccount.com
      
      containers:
      - name: sira-backend
        image: gcr.io/PROJECT_ID/sira-backend:latest
        
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP
        
        env:
        # Application
        - name: ENVIRONMENT
          value: "production"
        - name: DEBUG
          value: "false"
        - name: FASTAPI_HOST
          value: "0.0.0.0"
        - name: FASTAPI_PORT
          value: "8080"
        - name: WORKERS
          value: "4"
        
        # Google Cloud
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: VERTEX_AI_LOCATION
          value: "us-central1"
        
        # API Keys (from Secret Manager)
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: gemini-api-key
              key: latest
        
        # Firebase/Firestore
        - name: FIRESTORE_DATABASE
          value: "(default)"
        - name: FIRESTORE_COLLECTION
          value: "sira_analyses"
        
        # External Services
        - name: RAG_SERVICE_URL
          value: "https://sira-rag-service-HASH-uc.a.run.app"
        - name: GPU_SERVICE_URL
          value: "https://sira-gpu-service-HASH-uc.a.run.app"
        
        # Redis (Cloud Memorystore)
        - name: REDIS_URL
          value: "redis://REDIS_IP:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-password
              key: latest
        
        # Monitoring
        - name: PROMETHEUS_ENABLED
          value: "true"
        - name: LOG_LEVEL
          value: "INFO"
        - name: LOG_FORMAT
          value: "json"
        
        # Rate Limiting
        - name: RATE_LIMIT_ENABLED
          value: "true"
        - name: RATE_LIMIT_REQUESTS
          value: "1000"
        - name: RATE_LIMIT_WINDOW
          value: "60"
        
        # Security
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-secret-key
              key: latest
        - name: JWT_ALGORITHM
          value: "HS256"
        - name: JWT_EXPIRATION_HOURS
          value: "24"
        
        # CORS
        - name: CORS_ORIGINS
          value: "https://sira-frontend.web.app,https://sira-frontend.firebaseapp.com"
        
        resources:
          limits:
            cpu: "2000m"
            memory: "2Gi"
          requests:
            cpu: "1000m"
            memory: "1Gi"
        
        # Health checks
        startupProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3

  traffic:
  - percent: 100
    latestRevision: true
